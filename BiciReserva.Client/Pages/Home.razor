@page "/"
@using System.Security.Claims
@using BiciReserva.Client.Service
@inject AuthenticationStateProvider AuthStateProvider
@inject UserState UserState
<PageTitle>Home</PageTitle>

<div class="user-main-dashboard container py-5">
    <h2 class="text-center mb-5">¡Bienvenido a <span class="text-success">BiciLink</span>!</h2>

    <div class="row g-4 justify-content-center">

        @if (userRol == "Admin" || userRol == "User")
        {
            <div class="col-md-6 col-lg-4">
                <div class="feature-card text-center h-100 p-4">
                    <img src="image/Paseo.png" class="img-fluid mb-3 rounded" />
                    <h4>Elegí tu Ruta de Hoy</h4>
                    <p>Planificá tu recorrido diario eligiendo origen y destino.</p>
                    <RadzenButton Text="Planificar ruta" ButtonStyle="ButtonStyle.Primary" Click="@(() => Navigation.NavigateTo("/reservation"))" />
                </div>
            </div>

            <div class="col-md-6 col-lg-4">
                <div class="feature-card text-center h-100 p-4">
                    <img src="image/RutaIm.png" class="img-fluid mb-3 rounded" />
                    <h4>Explorá Nuevos Paseos</h4>
                    <p>Descubrí rutas recomendadas o turísticas para disfrutar.</p>
                    <RadzenButton Text="Buscar paseo" ButtonStyle="ButtonStyle.Success" Click="@(() => Navigation.NavigateTo("/reservation"))" />
                </div>
            </div>

            <div class="col-md-6 col-lg-4">
                <div class="feature-card text-center h-100 p-4">
                    <img src="image/verifica.png" class="img-fluid mb-3 rounded" />
                    <h4>Revisá tus Viajes</h4>
                    <p>Consultá el historial de tus trayectos y recorridos.</p>
                    <RadzenButton Text="Ver historial" ButtonStyle="ButtonStyle.Secondary" Click="@(() => Navigation.NavigateTo("/historial"))" />
                </div>
            </div>

            <div class="col-md-6 col-lg-4">
                <div class="feature-card text-center h-100 p-4">
                    <img src="image/ruta.png" class="img-fluid mb-3 rounded" />
                    <h4>Verificá Bicis Disponibles</h4>
                    <p>Consultá el estado actual de estaciones y bicicletas disponibles.</p>
                    <RadzenButton Text="Ver disponibilidad" ButtonStyle="ButtonStyle.Warning" Click="@(() => Navigation.NavigateTo("/reservation"))" />
                </div>
            </div>
        }

        @if (userRol == "Admin" || userRol == "Tecnico")
        {
            <div class="col-md-6 col-lg-4">
                <div class="feature-card text-center h-100 p-4">
                    <img src="image/Matenimiento.png" class="img-fluid mb-3 rounded" />
                    <h4>Mantenimiento de bicicletas</h4>
                    <p>Gestioná el mantenimiento de las bicicletas.</p>
                    <RadzenButton Text="Mantenimiento" ButtonStyle="ButtonStyle.Warning" Click="@(() => Navigation.NavigateTo("/maintenance"))" />
                </div>
            </div>
        }

        @if (userRol == "Admin")
        {
            <div class="col-md-6 col-lg-4">
                <div class="feature-card text-center h-100 p-4">
                    <img src="image/Soporte.png" class="img-fluid mb-3 rounded" />
                    <h4>Atención al Cliente</h4>
                    <p>Consulta incidentes reportados por los usuarios.</p>
                    <RadzenButton Text="Soporte" ButtonStyle="ButtonStyle.Warning" Click="@(() => Navigation.NavigateTo("/historial"))" />
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Inject] NavigationManager Navigation { get; set; }

    string? userRol;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userRol = user.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;
            UserState.UserName = user.FindFirst(c => c.Type == ClaimTypes.Email)?.Value;
        }
    }
}